import { ElementRef, Renderer2, EventEmitter } from '@angular/core';
import { DraggableProxyComponent } from './draggable-proxy.component';
export declare class DraggableDirective {
    hostRef: ElementRef;
    renderer: Renderer2;
    scope: any;
    handle: Element | ElementRef;
    disabled: boolean;
    revert: boolean;
    deltaX: number;
    deltaY: number;
    edge: number;
    delay: number;
    axis: String;
    cursor: String;
    proxy: DraggableProxyComponent;
    dragStart: EventEmitter<{}>;
    drag: EventEmitter<{}>;
    dragEnd: EventEmitter<{}>;
    isDragging: boolean;
    entered: boolean;
    currDroppable: any;
    state: any;
    mousemoveListener: Function;
    mouseupListener: Function;
    touchmoveListener: Function;
    touchendListener: Function;
    hostTransitionListener: Function;
    constructor(hostRef: ElementRef, renderer: Renderer2);
    parseEvent(event: any): any;
    getHandle(): any;
    onMouseDown(event: any): void;
    onMouseMove(event: any): void;
    onMouseLeave(event: any): void;
    doMove(event: any): boolean;
    doUp(event: any): boolean;
    findDroppable(e: any): any;
    checkDrag(e: any): void;
    checkDrop(e: any): boolean;
    removeProxy(): void;
    revertPosition(): void;
    restorePosition(): void;
    bindDocumentEvents(): void;
    unbindDocumentEvents(): void;
    checkArea(e: any): boolean;
    clearDragging(): void;
    doDrag(e: any): void;
    applyDrag(): void;
    static droppables: any[];
}
